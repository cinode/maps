{{- if $.Values.tileServer.syncJob.enabled -}}
{{- $scripts := list "tile-server-sync-cronjob-entrypoint.sh" -}}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ print $.Release.Name "-osm-sync" | quote }}
spec:
  # Attempt to frequently, we sync hourly diffs meaning that
  # we should have a pretty tight synchronization loop
  schedule: {{ $.Values.tileServer.syncJob.schedule | quote }}

  # Do not allow concurrent sync jobs - this is critical because
  # some jobs will take significant amount of time, much more than cron job's
  # schedule and we don't want to run those concurrently, especially the diff
  # sync with initial import
  concurrencyPolicy: Forbid

  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: {{ print $.Release.Name "-data-sync" | quote }}
          annotations:
            {{- range $s := $scripts }}
              {{ print "checksum-scripts-" $s | quote }}: {{ tpl ($.Files.Get (print "scripts/" $s)) $ | sha256sum }}
            {{- end }}
        spec:
          securityContext: {{- $.Values.tileServer.securityContext | toYaml | nindent 12 }}
          containers:
            - name: "data-sync"
              image: {{ printf "%s/%s:%s" $.Values.tileServer.image.registry $.Values.tileServer.image.repository $.Values.tileServer.image.tag | quote }}
              env:
                - name: PGHOST
                  value: {{ print $.Release.Name "-postgres" | quote }}
                - name: PGDATABASE
                  value: {{ $.Values.postgres.auth.database | quote }}
                - name: PGUSER
                  value: {{ $.Values.postgres.auth.username | quote }}
                - name: PGPASSWORD
                  value: {{ $.Values.postgres.auth.password | quote }}
                - name: EXPIRY_SERVER
                  value: {{ print "http://" $.Release.Name "-tile-server-svc:8642/" | quote }}
              securityContext: {{- $.Values.tileServer.containerSecurityContext | toYaml | nindent 16 }}
              volumeMounts:
                - name: state
                  mountPath: /data
                - name: tmp
                  mountPath: /var/log/tiles
                  subPath: var/log/tiles
                - name: tmp
                  mountPath: /tmp
                  subPath: tmp
                - name: tmp
                  mountPath: /var/run
                  subPath: var/run
                - name: scripts-volume
                  mountPath: /app/scripts
              command: [ "sh", "/app/scripts/tile-server-sync-cronjob-entrypoint.sh" ]

          volumes:
            - name: tmp
              emptyDir: {}

            - name: state
              persistentVolumeClaim:
                claimName: {{ print $.Release.Name "-tile-server-data" | quote }}

            - name: scripts-volume
              configMap:
                name: {{ print $.Release.Name "-scripts" | quote }}
                items:
                {{- range $s := $scripts }}
                  - key: {{ $s | quote  }}
                    path: {{ $s | quote }}
                {{- end }}

          # Do not restart failed jobs - we will reschedule quickly anyway
          restartPolicy: Never
{{- end -}}
