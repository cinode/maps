{{- if $.Values.tileServer.webServer.enabled }}
{{- $scripts := list "tile-server-entrypoint.sh" -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ print $.Release.Name "-tile-server" | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ print $.Release.Name "-tile-server" | quote }}
  template:
    metadata:
      labels:
        app: {{ print $.Release.Name "-tile-server" | quote }}
      annotations:
        {{- range $s := $scripts }}
          {{ print "checksum-scripts-" $s | quote }}: {{ tpl ($.Files.Get (print "scripts/" $s)) $ | sha256sum }}
        {{- end }}
    spec:
      containers:
        - name: tile-server
          image: {{ printf "%s/%s:%s" $.Values.tileServer.image.registry $.Values.tileServer.image.repository $.Values.tileServer.image.tag | quote }}
          env:
            - name: PGHOST
              value: {{ print $.Release.Name "-postgres" | quote }}
            - name: PGDATABASE
              value: {{ $.Values.postgres.auth.database | quote }}
            - name: PGUSER
              value: {{ $.Values.postgres.auth.username | quote }}
            - name: PGPASSWORD
              value: {{ $.Values.postgres.auth.password | quote }}
          securityContext: {{- $.Values.tileServer.containerSecurityContext | toYaml | nindent 12 }}
          resources: {{ $.Values.tileServer.webServer.resources | toYaml | nindent 12 }}
          volumeMounts:
            - name: state
              mountPath: /data/tiles
              subPath: "tiles"

            - name: tmp
              mountPath: /data/style
              subPath: data/style
            - name: tmp
              mountPath: /var/log/tiles
              subPath: var/log/tiles
            - name: tmp
              mountPath: /var/log/apache2
              subPath: var/log/apache2
            - name: tmp
              mountPath: /tmp
              subPath: tmp
            - name: tmp
              mountPath: /var/run
              subPath: var/run
            - name: tmp
              mountPath: /var/lock
              subPath: var/lock
            - name: scripts-volume
              mountPath: /app/scripts
          command: [ "sh", "/app/scripts/tile-server-entrypoint.sh" ]

      volumes:
        - name: tmp
          emptyDir: {}

        - name: state
          persistentVolumeClaim:
            claimName: {{ print $.Release.Name "-tile-server-data" | quote }}

        - name: scripts-volume
          configMap:
            name: {{ print $.Release.Name "-scripts" | quote }}
            items:
            {{- range $s := $scripts }}
              - key: {{ $s | quote  }}
                path: {{ $s | quote }}
            {{- end }}
{{- end }}
